---
- name: install lamp stack and nextcloud
  hosts: all
  remote_user: ansible
  become: yes
  
  vars:
    - {servername: "example"}

  tasks:
  - name: add certbot repo
    apt_repository: repo='ppa:certbot/certbot' state=present
    
  - name: update all packages
    apt: update_cache=yes cache_valid_time=3600 name=* state=latest
    
  - name: install apache
    apt: name="{{ packages }}" state=latest
    vars:
      packages:
      - apache2
      - apache2-doc
      - apache2-utils
      - libexpat1
      - ssl-cert

  - name: start apache
    service: name=apache2 state=started
    
  - name: install certbot
    apt: name="{{ packages }}" state=latest
    vars:
      packages:
      - software-properties-common
      - certbot
      - python-certbot-apache
    
  - name: install mysql
    apt: name="{{ packages }}" state=latest
    vars:
      packages:
      - mysql-server
      - mysql-client
      - libmysqlclient-dev
      
  - name: install php
    apt: name="{{ packages }}" state=latest
    vars:
      packages:
      - libapache2-mod-php7.2 
      - php7.2 
      - php7.2-common 
      - php7.2-curl 
      - php7.2-dev 
      - php7.2-gd 
      - php-pear 
      - php-imagick  
      - php7.2-mysql 
      - php7.2-ps 
      - php7.2-xsl 
      - php-json 
      - php-cgi
    
  - name: install phpmyadmin
    apt: name=phpmyadmin state=latest

  # - name: install python-mysqldb for sql statements
    # apt: name=python-mysqldb state=latest
    
  - name: install pip
    apt: name=python3-pip state=latest
    
  - name: install the mysqlclient module
    pip: name=mysqlclient
    
  # - name: install the Python mysqlclient
    # pip: name=mysqlclient
    
  - name: add firewall rule
    ufw: rule=allow name="Apache Full"

  # - name: create website directory
    # file:
      # path: "/var/www/html/{{ servername }}"
      # state: directory
      
  - name: install unzip
    apt: name=unzip state=latest
    
  - name: download nextcloud 17
    get_url:
      url: "https://download.nextcloud.com/server/releases/nextcloud-17.0.0.zip"
      dest: /tmp/nextcloud17.zip
    
  - name: extract nextcloud 17
    unarchive:
      src: /tmp/nextcloud17.zip
      dest: "/var/www"
      remote_src: yes
      
  - name: create temp directory
    file:
      path: "/srv/files"
      state: directory
      
  - name: copy setup_nextcloud_db sql script
    copy:
      src: ../sql/setup_nextcloud_db.sql
      dest: /srv/files/setup_nextcloud_db.sql
      
  - name: setup_nextcloud_db
    mysql_db:
      state: import
      name: all
      target: /srv/files/setup_nextcloud_db.sql
      
  - name: delete setup_nextcloud_db sql script
    file:
      path: /srv/files/setup_nextcloud_db.sql
      state: absent
      
  - name: delete downloaded archive
    file:
      path: /tmp/nextcloud17.zip
      state: absent
    
  - name: copy no-root sql script
    copy:
      src: ../sql/no-root.sql
      dest: /srv/files/no-root.sql
      
  - name: disable root login without password
    mysql_db:
      state: import
      name: all
      target: /srv/files/no-root.sql
      
  - name: delete no-root sql script
    file:
      path: /srv/files/no-root.sql
      state: absent
      
  - name: recursively change ownership of nextcloud
    file:
      path: "/var/www/nextcloud"
      state: directory
      recurse: yes
      owner: www-data
      group: www-data
    
  - name: configure nextcloud
    template:
      src: ../configs/nextcloud.j2
      dest: /etc/apache2/conf-available/nextcloud.conf
      owner: root
      group: root
      mode: 'u=rw,g=r,o=r'
      
  - name: enable apache2 nextcloud conf
    shell: sudo a2enconf nextcloud

  - name: apache2 modules
    apache2_module:
      name: "{{item}}"
    with_items:
      - 'rewrite'
      - 'headers'
      - 'env'
      - 'dir'
      - 'mime'
 
  - name: disable default site
    command: a2dissite "000-default.conf"
    
  - name: restart apache
    service: name=apache2 state=restarted